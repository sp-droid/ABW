namespace = environ

#### YEARLY COUNTER
environ.1 = { #+1 to the year counter, each year
    type = province_event
	hidden = yes
	
	trigger = {
		THIS = p:4730
	}

	immediate = {
		#### YEAR
		change_global_variable = { name = yearvarglobal add = 1 }
		
		#### GLOBAL TEMPERATURE
		change_global_variable = { name = tempglobal add = { -0.005 0.005 } }
		if = { limit = { global_var:yearvarglobal < 1650 } change_global_variable = { name = tempglobal subtract = 0.0009} }
		else = { change_global_variable = { name = tempglobal add = 0.0012} }
		
		#### GLOBAL RAINFALL
		set_global_variable = { name = rainglobal value = { 0.7 1.3 } }
		
		#### COUNTRY AREA
		every_country = {
			set_variable = { name = abw_area value = 0 }
			every_owned_province = {
				limit = { is_uninhabitable = no }
				PREV = { change_variable = { name = abw_area add = PREV.var:dat_area.divk_sv } }
			}
			set_variable = { name = abw_area value = var:abw_area.divk_sv }
		}
		
		#### APPLY TEMP & RAIN TO EVERY PROVINCE
		every_province = {
			limit = { is_uninhabitable = no }
			
			set_variable = { name = templocal value = var:dat_temp.environtemp_sv }
			set_variable = { name = rainlocal value = var:dat_rain.environrain_sv }
		}
		
		#### CAPITAL TRAVEL TIME
		trigger_event = { id = "environ.2" days = 1 }
		# EVERY HUMAN PLAYER
		every_country = {
			limit = { is_ai = no }
			#### CAPITAL DISTANCE STARTUP
			trigger_event = { id = "environ.3" days = 2 }
		}
	}
}

#### IN-PROVINCE TRAVEL TIME
environ.2 = { 
    type = province_event
	hidden = yes

	immediate = {
		# Every province DOES NOT iterate over sea provinces, but every_neighbor does
		# Sea provinces still respond well to direct calls like p:500 = ...
		# We can use every_sea_and_river_zone
		every_province = { 
			set_variable = { name = traveltime value = var:dat_dist }
			# Medieval messenger with spare horses on good flat land, 30 miles per day
			change_variable = { name = traveltime divide = 30 }
		}
		every_sea_and_river_zone = {
			limit = {
				is_sea = yes
			}
			# Sea zones will have the same distance each, 300 miles
			set_variable = { name = traveltime value = 300 }
			# Medieval ship on good conditions
			change_variable = { name = traveltime divide = 100 }
		}
	}
}

#### CAPITAL SEED & INTER-PROVINCE TRAVEL TIME
environ.3 = { 
    type = country_event
	hidden = yes

	immediate = {
		capital_scope = {
			set_variable = { name = admintime value = 0 }
			set_variable = { name = adminscope value = THIS }
			set_variable = { name = adminvisited_flag }
			
			every_neighbor_province = {
				limit = {
					OR = {
						AND = {
							exists = owner
							owner = ROOT
						}
						is_sea = yes
					}
				}
				add_to_list = adminlist
				set_variable = { name = admincalc_flag }
				
				set_variable = { name = admintime value = 0 }
				set_variable = { name = adminscope value = PREV }
				change_variable = { name = admintime add = PREV.var:traveltime }
			}
		}
		set_variable = { name = continue_flag }
	
		while = {
			limit = {
				has_variable = continue_flag
			}
			remove_variable = continue_flag
			
			# Search the scouted province with the lowest travel time
			ordered_in_list = {
				list = adminlist
				order_by = var:admintime
				check_range_bounds = no
				# Max = 2 trims the list by the first two, rendering "position = end" useless. Careful
				position = end
				
				save_scope_as = target
				ROOT = { set_variable = { name = continue_flag } }
			}
			
			scope:target = {
				# Remove the scouted flag, set as visited
				remove_from_list = adminlist
				remove_variable = admincalc_flag
				set_variable = { name = adminvisited_flag }
				
				# Temporary variable to store the admintime for new provinces
				set_variable = { name = admintemp value = var:admintime }
				change_variable = { name = admintemp add = var:traveltime }
				
				if = { #Seed is sea
					limit = {
						is_sea = yes
					}
					every_neighbor_province = {
						limit = {
							AND = {
								NOT = { has_variable = adminvisited_flag }
								OR = {
									AND = {
										exists = owner
										owner = ROOT
									}
									is_sea = yes
								}
							}
						}
						set_variable = { name = admintemp value = PREV.var:admintemp }
						if = {
							limit = {
								is_sea = no
							}
							if = {
								limit = {
									is_port = no
								}
								change_variable = { name = admintemp add = 30 }
							}
						}
						
						if = { # Previously scouted neighboring provinces
							limit = {
								has_variable = admincalc_flag
							}
							if = {
								limit = {
									var:admintemp < var:admintime
								}
								set_variable = { name = admintime value = var:admintemp }
								set_variable = { name = adminscope value = PREV.var:adminscope }
							}
						}
						else = { # New provinces, set as scouted
							add_to_list = adminlist
							set_variable = { name = admincalc_flag }
							set_variable = { name = admintime value = var:admintemp }
							set_variable = { name = adminscope value = PREV.var:adminscope }
						}
					}
				}
				else = { #Seed is owned land
					every_neighbor_province = {
						limit = {
							AND = {
								NOT = { has_variable = adminvisited_flag }
								OR = {
									AND = {
										exists = owner
										owner = ROOT
									}
									is_sea = yes
								}
							}
						}
						set_variable = { name = admintemp value = PREV.var:admintemp }
						if = {
							limit = {
								is_sea = yes
								PREV = { is_port = no }
							}
							change_variable = { name = admintemp add = 30 }
						}
						
						if = { # Previously scouted neighboring provinces
							limit = {
								has_variable = admincalc_flag
							}
							if = {
								limit = {
									var:admintemp < var:admintime
								}
								set_variable = { name = admintime value = var:admintemp }
								set_variable = { name = adminscope value = PREV }
							}
						}
						else = { # New provinces, set as scouted
							add_to_list = adminlist
							set_variable = { name = admincalc_flag }
							set_variable = { name = admintime value = var:admintemp }
							set_variable = { name = adminscope value = PREV }
						}
					}
				}
			}
		}
		every_owned_province = {
			if = {
				limit = {
					NOT = { has_variable = adminvisited_flag }
				}
				set_variable = { name = admintime value = 360 }
			}
			else = {
				remove_variable = adminvisited_flag
			}
			
		}
		every_sea_and_river_zone = {
			limit = {
				has_variable = adminvisited_flag
			}
			remove_variable = adminvisited_flag
		}
	}
}