namespace = environ

#### YEARLY COUNTER
environ.1 = { #+1 to the year counter, each year
    type = province_event
	hidden = yes
	
	trigger = {
		THIS = p:4730
	}

	immediate = {
		#### YEAR
		change_global_variable = { name = yearvarglobal add = 1 }
		
		#### GLOBAL TEMPERATURE
		change_global_variable = { name = tempglobal add = { -0.005 0.005 } }
		if = { limit = { global_var:yearvarglobal < 1650 } change_global_variable = { name = tempglobal subtract = 0.0009} }
		else = { change_global_variable = { name = tempglobal add = 0.0012} }
		
		#### GLOBAL RAINFALL
		set_global_variable = { name = rainglobal value = { 0.7 1.3 } }
		
		#### APPLY TEMP & RAIN TO EVERY PROVINCE
		every_province = {
			limit = { is_uninhabitable = no }
			
			set_variable = { name = templocal value = var:dat_temp.environtemp_sv }
			set_variable = { name = rainlocal value = var:dat_rain.environrain_sv }
		}
	}
}

#### IN-PROVINCE TRAVEL TIME
environ.2 = { 
    type = province_event
	hidden = yes
	
	trigger = {
		THIS = p:4730
	}

	immediate = {
		# Every province DOES NOT iterate over sea provinces, but every_neighbor does
		# Sea provinces still respond well to direct calls like p:500 = ...
		# We can use every_sea_and_river_zone
		every_province = { 
			set_variable = { name = traveltime value = 1 }
		}
	}
}

#### CAPITAL SEED & INTER-PROVINCE TRAVEL TIME
environ.3 = { 
    type = country_event
	hidden = yes

	immediate = {
		capital_scope = {
			set_variable = { name = admintime value = 0 }
			set_variable = { name = adminvisited_flag }
			
			every_neighbor_province = {
				limit = {
					OR = {
						AND = {
							exists = owner
							owner = ROOT
						}
						is_sea = yes
					}
				}
				add_to_list = adminlist
				set_variable = { name = admincalc_flag }
				
				set_variable = { name = admintime value = 0 }
				change_variable = { name = admintime add = PREV.var:traveltime }
			}
		}
		set_variable = { name = continue_flag }
	
		while = {
			limit = {
				has_variable = continue_flag
			}
			remove_variable = continue_flag
			
			# Search the scouted province with the lowest travel time
			ordered_in_list = {
				list = adminlist
				order_by = var:admintime
				check_range_bounds = no
				# Max = 2 trims the list by the first two, rendering "position = end" useless. Careful
				position = end
				
				save_scope_as = target
				ROOT = { set_variable = { name = continue_flag } }
			}
			
			scope:target = {
				# Remove the scouted flag, set as visited
				remove_from_list = adminlist
				remove_variable = admincalc_flag
				set_variable = { name = adminvisited_flag }
				
				# Temporary variable to store the admintime for new provinces
				set_variable = { name = admintemp value = var:admintime }
				if = {
					limit = {
						is_sea = yes
					}
					change_variable = { name = admintemp add = 1 }
				}
				else = {
					change_variable = { name = admintemp add = var:traveltime }
				}
				
				every_neighbor_province = { #Non visited, owned or sea neighboring provinces
					limit = {
						AND = {
							NOT = { has_variable = adminvisited_flag }
							OR = {
								AND = {
									exists = owner
									owner = ROOT
								}
								is_sea = yes
							}
						}
					}
					if = { # Previously scouted neighboring provinces
						limit = {
							has_variable = admincalc_flag
						}
						if = {
							limit = {
								PREV.var:admintemp < var:admintime
							}
							set_variable = { name = admintime value = PREV.var:admintemp }
						}
					}
					else = { # New provinces, set as scouted
						add_to_list = adminlist
						set_variable = { name = admincalc_flag }
						set_variable = { name = admintime value = PREV.var:admintemp }
					}
				}
			}
		}
		every_owned_province = {
			if = {
				limit = {
					NOT = { has_variable = adminvisited_flag }
				}
				set_variable = { name = admintime value = 730 }
			}
			else = {
				remove_variable = adminvisited_flag
			}
			
		}
		every_sea_and_river_zone = {
			limit = {
				has_variable = adminvisited_flag
			}
			remove_variable = adminvisited_flag
		}
	}
}